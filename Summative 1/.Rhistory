#Plotting returns
date.ts <- ymd(Returns$date)
par(mfrow = c(2, 1))
Returns.ts <- zoo(Returns$TSLA,order.by=date.ts)
plot(Returns.ts, type = "l",main = "Returns", ylab = "Tesla",col = "blue")
Returns.ts <- zoo(Returns$UL,order.by=date.ts)
plot(Returns.ts, type = "l", ylab = "Unilever", col = "blue")
#Zooming into Tesla's price
par(mfrow = c(1, 1))
Prices.crisis <- window(Prices.ts.Tesla,start= ymd(20200101),end=ymd(20231231))
plot(Prices.crisis, type = "l",main = "Zooming into Tesla", ylab = "Price", col = "red")
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
abline(v = ymd(20221027), lwd = 1, col = "blue") #Elon Musk bought Twitter
legend("bottomright",
legend = c("Start of Covid Lockdown", "Russia-Ukraine Conflict","CEO Twitter Acquisition"),
col = c("purple", "black", "blue"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
#Analysing Tesla's returns
t <- Returns$TSLA
dist_test <- qqPlot(t, distribution = "norm", envelope = FALSE, ylab ="Tesla Returns", main ="Normal")
dist_test <- qqPlot(t, distribution = "t", df = 4, envelope = FALSE,  ylab ="Tesla Returns",main ="t(4)")
dist_test <- qqPlot(t, distribution = "t", df = 3, envelope = FALSE, ylab ="Tesla Returns",main ="t(3)")
dist_test <- qqPlot(t, distribution = "t", df = 3.5, envelope = FALSE, ylab ="Tesla Returns",main ="t(3.5)")
mean(t)
sd(t)
skewness(t)
kurtosis(t)
jarque.bera.test(t)
acf(t, main = "Autocorrelation of returns")
acf(t, main = "Autocorrelation of returns")
acf(t^2, main = "Autocorrelation of returns")
Box.test(t, type = "Ljung-Box")
Box.test(t^2, type = "Ljung-Box")
acf(t, main = "Autocorrelation of returns")
Box.test(t, type = "Ljung-Box")
acf(t^2, main = "Autocorrelation of returns")
Box.test(t^2, type = "Ljung-Box")
acf(t, main = "Autocorrelation of returns")
Box.test(t, type = "Ljung-Box")
acf(t, main = "Autocorrelation of returns")
mean(u)
mean(u)
# Clearing the environment
rm(list =ls())
# #Installing the packages
# install.packages("lubridate")
# install.packages("reshape2")
# install.packages("moments")
# install.packages("zoo")
# install.packages("tseries")
# install.packages("car")
#Libraries
library(lubridate)
library(reshape2)
library(moments)
library(zoo)
library(tseries)
library(car)
#Setting the work Directory
setwd("/Users/tarunrajan/Library/Mobile Documents/com~apple~CloudDocs/FM321/Summative 1")
#Reading in the data
stocks <- read.csv("Stocks.csv")
#Adjusting the Returns
stocks$Unadjusted_Price <- stocks$PRC
stocks$Adjusted_Price <- stocks$PRC / stocks$CFACPR
#Subset for prices
Tickers <- dcast(stocks, date ~ PERMNO, value.var = "TICKER")
Tickers <- head(Tickers,1)
Prices <- dcast(stocks, date ~ PERMNO, value.var = "Adjusted_Price")
names(Prices) <- Tickers
names(Prices)[1] <- "date"
#Plotting prices
date.ts <- ymd(Prices$date)
par(mfrow = c(2, 1))
Prices.ts.Tesla <- zoo(Prices$TSLA,order.by=date.ts)
plot(Prices.ts.Tesla, type = "l",main = "Prices", ylab = "Tesla",col = "red")
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
#Subset for simple returns
Simple_Returns <- dcast(stocks, date ~ PERMNO, value.var = "RET")
names(Simple_Returns) <- Tickers
names(Simple_Returns)[1] <- "date"
#Converting to compound returns
Returns <- log(1 + Simple_Returns[,2:dim(Simple_Returns)[2]])
Returns$date <- Simple_Returns$date
Returns <- Returns[,c(dim(Simple_Returns)[2],1:dim(Simple_Returns)[2] - 1)]
#Plotting returns
date.ts <- ymd(Returns$date)
par(mfrow = c(2, 1))
Returns.ts <- zoo(Returns$TSLA,order.by=date.ts)
plot(Returns.ts, type = "l",main = "Returns", ylab = "Tesla",col = "blue")
Returns.ts <- zoo(Returns$UL,order.by=date.ts)
plot(Returns.ts, type = "l", ylab = "Unilever", col = "blue")
#Zooming into Tesla's price
par(mfrow = c(1, 1))
Prices.crisis <- window(Prices.ts.Tesla,start= ymd(20200101),end=ymd(20231231))
plot(Prices.crisis, type = "l",main = "Zooming into Tesla", ylab = "Price", col = "red")
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
abline(v = ymd(20221027), lwd = 1, col = "blue") #Elon Musk bought Twitter
legend("bottomright",
legend = c("Start of Covid Lockdown", "Russia-Ukraine Conflict","CEO Twitter Acquisition"),
col = c("purple", "black", "blue"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
#Analysing Tesla's returns
t <- Returns$TSLA
dist_test <- qqPlot(t, distribution = "norm", envelope = FALSE, ylab ="Tesla Returns", main ="Normal")
dist_test <- qqPlot(t, distribution = "t", df = 4, envelope = FALSE,  ylab ="Tesla Returns",main ="t(4)")
dist_test <- qqPlot(t, distribution = "t", df = 3, envelope = FALSE, ylab ="Tesla Returns",main ="t(3)")
dist_test <- qqPlot(t, distribution = "t", df = 3.5, envelope = FALSE, ylab ="Tesla Returns",main ="t(3.5)")
mean(t)
sd(t)
skewness(t)
kurtosis(t)
jarque.bera.test(t)
acf(t, main = "Autocorrelation of returns")
Box.test(t, type = "Ljung-Box")
acf(t^2, main = "Autocorrelation of returns")
Box.test(t^2, type = "Ljung-Box")
#Analysing Unilever's returns
u <- Returns$UL
dist_test <- qqPlot(u, distribution = "norm", envelope = FALSE, ylab ="Unilever Returns", main ="Normal")
dist_test <- qqPlot(u, distribution = "t", df = 4, envelope = FALSE,  ylab ="Unilever Returns",main ="t(4)")
dist_test <- qqPlot(u, distribution = "t", df = 3, envelope = FALSE, ylab ="Unilever Returns",main ="t(3)")
dist_test <- qqPlot(u, distribution = "t", df = 3.5, envelope = FALSE, ylab ="Unilever Returns",main ="t(3.5)")
mean(u)
sd(u)
skewness(u)
kurtosis(u)
jarque.bera.test(u)
acf(u, main = "Autocorrelation of returns")
Box.test(u, type = "Ljung-Box")
acf(u^2, main = "Autocorrelation of returns")
Box.test(u^2, type = "Ljung-Box")
mean(t)
par(mfrow = c(2, 1))
Prices.ts.Tesla <- zoo(Prices$TSLA,order.by=date.ts)
plot(Prices.ts.Tesla, type = "l",main = "Prices", ylab = "Tesla",col = "red")
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
abline(v = ymd(20221027), lwd = 1, col = "blue") #Elon Musk bought Twitter
par(mfrow = c(2, 1))
Prices.ts.Tesla <- zoo(Prices$TSLA,order.by=date.ts)
plot(Prices.ts.Tesla, type = "l",main = "Prices", ylab = "Tesla",col = "red")
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
abline(v = ymd(20221027), lwd = 1, col = "blue") #Elon Musk bought Twitter
legend("topleft",
legend = c("Start of Covid Lockdown", "Russia-Ukraine Conflict","CEO Twitter Acquisition"),
col = c("purple", "black", "blue"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
abline(v = ymd(20160623), lwd = 1, col = "") #Brexit Referendum
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Start of Covid Lockdown", "Russia-Ukraine Conflict",""),
col = c("purple", "black", "blue"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "") #Brexit Referendum
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "") #Brexit Referendum
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "yellow") #Brexit Referendum
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("blue","purple", "black", ),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "green") #Brexit Referendum
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("blue","purple", "black", ),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "brown") #Brexit Referendum
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("brown","purple", "black", ),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "darkgreen") #Brexit Referendum
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("darkgreen","purple", "black", ),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "green") #Brexit Referendum
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("green","purple", "black", ),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "green") #Brexit Referendum
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("green","purple", "black"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "green") #Brexit Referendum
abline(v = ymd(20190101), lwd = 1, col = "blue") #CEO change
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","CEO change","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("green","blue","purple", "black"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "green") #Brexit Referendum
abline(v = ymd(20170217), lwd = 1, col = "darkred") #Brexit Referendum
abline(v = ymd(20190101), lwd = 1, col = "blue") #CEO change
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","CEO change","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("green","darkred","blue","purple", "black"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "green") #Brexit Referendum
abline(v = ymd(20170217), lwd = 1, col = "darkred") #Merger speculation
abline(v = ymd(20190101), lwd = 1, col = "blue") #CEO change
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","Merger speculation","CEO change","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("green","darkred","blue","purple", "black"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
# Clearing the environment
rm(list =ls())
# #Installing the packages
# install.packages("lubridate")
# install.packages("reshape2")
# install.packages("moments")
# install.packages("zoo")
# install.packages("tseries")
# install.packages("car")
#Libraries
library(lubridate)
library(reshape2)
library(moments)
library(zoo)
library(tseries)
library(car)
#Setting the work Directory
setwd("/Users/tarunrajan/Library/Mobile Documents/com~apple~CloudDocs/FM321/Summative 1")
#Reading in the data
stocks <- read.csv("Stocks.csv")
#Adjusting the Returns
stocks$Unadjusted_Price <- stocks$PRC
stocks$Adjusted_Price <- stocks$PRC / stocks$CFACPR
#Subset for prices
Tickers <- dcast(stocks, date ~ PERMNO, value.var = "TICKER")
Tickers <- head(Tickers,1)
Prices <- dcast(stocks, date ~ PERMNO, value.var = "Adjusted_Price")
names(Prices) <- Tickers
names(Prices)[1] <- "date"
#Plotting prices
date.ts <- ymd(Prices$date)
par(mfrow = c(2, 1))
Prices.ts.Tesla <- zoo(Prices$TSLA,order.by=date.ts)
plot(Prices.ts.Tesla, type = "l",main = "Prices", ylab = "Tesla",col = "red")
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
abline(v = ymd(20221027), lwd = 1, col = "blue") #Elon Musk bought Twitter
legend("topleft",
legend = c("Start of Covid Lockdown", "Russia-Ukraine Conflict","CEO Twitter Acquisition"),
col = c("purple", "black", "blue"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "green") #Brexit Referendum
abline(v = ymd(20170217), lwd = 1, col = "darkred") #Merger speculation
abline(v = ymd(20190101), lwd = 1, col = "blue") #CEO change
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","Merger speculation","CEO change","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("green","darkred","blue","purple", "black"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
#Subset for simple returns
Simple_Returns <- dcast(stocks, date ~ PERMNO, value.var = "RET")
names(Simple_Returns) <- Tickers
names(Simple_Returns)[1] <- "date"
#Converting to compound returns
Returns <- log(1 + Simple_Returns[,2:dim(Simple_Returns)[2]])
Returns$date <- Simple_Returns$date
Returns <- Returns[,c(dim(Simple_Returns)[2],1:dim(Simple_Returns)[2] - 1)]
#Plotting returns
date.ts <- ymd(Returns$date)
par(mfrow = c(2, 1))
Returns.ts <- zoo(Returns$TSLA,order.by=date.ts)
plot(Returns.ts, type = "l",main = "Returns", ylab = "Tesla",col = "blue")
Returns.ts <- zoo(Returns$UL,order.by=date.ts)
plot(Returns.ts, type = "l", ylab = "Unilever", col = "blue")
#Analysing Tesla's returns
t <- Returns$TSLA
dist_test <- qqPlot(t, distribution = "norm", envelope = FALSE, ylab ="Tesla Returns", main ="Normal")
dist_test <- qqPlot(t, distribution = "t", df = 4, envelope = FALSE,  ylab ="Tesla Returns",main ="t(4)")
dist_test <- qqPlot(t, distribution = "t", df = 3, envelope = FALSE, ylab ="Tesla Returns",main ="t(3)")
dist_test <- qqPlot(t, distribution = "t", df = 3.5, envelope = FALSE, ylab ="Tesla Returns",main ="t(3.5)")
mean(t)
sd(t)
skewness(t)
kurtosis(t)
jarque.bera.test(t)
acf(t, main = "Autocorrelation of returns")
Box.test(t, type = "Ljung-Box")
acf(t^2, main = "Autocorrelation of returns")
Box.test(t^2, type = "Ljung-Box")
#Analysing Unilever's returns
u <- Returns$UL
dist_test <- qqPlot(u, distribution = "norm", envelope = FALSE, ylab ="Unilever Returns", main ="Normal")
dist_test <- qqPlot(u, distribution = "t", df = 4, envelope = FALSE,  ylab ="Unilever Returns",main ="t(4)")
dist_test <- qqPlot(u, distribution = "t", df = 3, envelope = FALSE, ylab ="Unilever Returns",main ="t(3)")
dist_test <- qqPlot(u, distribution = "t", df = 3.5, envelope = FALSE, ylab ="Unilever Returns",main ="t(3.5)")
mean(u)
sd(u)
skewness(u)
kurtosis(u)
jarque.bera.test(u)
acf(u, main = "Autocorrelation of returns")
Box.test(u, type = "Ljung-Box")
acf(u^2, main = "Autocorrelation of returns")
Box.test(u^2, type = "Ljung-Box")
# df <- matrix(ncol=4,nrow=2)
# n <- names(Returns)
# n <- n[2:length(n)]
# for(i in 1:length(n)){
# x=Returns[[n[i]]]
# df[i,]=c(mean(x),sd(x),min(x),max(x))
# }
# df <-  as.data.frame(df)
# df <- cbind(n,df*100)
# names(df)=c("Asset","mean","sd","min","max")
# kable(df,digits=3,caption="Sample stats (in %)") # uses the kable function to create a nicely formatted table from df, rounding values to 3 digits and adding the caption "Sample stats (in %)".
# #Zooming into Tesla's price
# par(mfrow = c(1, 1))
# Prices.crisis <- window(Prices.ts.Tesla,start= ymd(20200101),end=ymd(20231231))
# plot(Prices.crisis, type = "l",main = "Zooming into Tesla", ylab = "Price", col = "red")
# abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
# abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
# abline(v = ymd(20221027), lwd = 1, col = "blue") #Elon Musk bought Twitter
#
# legend("bottomright",
#        legend = c("Start of Covid Lockdown", "Russia-Ukraine Conflict","CEO Twitter Acquisition"),
#        col = c("purple", "black", "blue"),
#        lwd = 2,
#        cex = 0.6,
#        bty = "n")  # 'bty = "n"' removes the box around the legend
#Plotting prices
date.ts <- ymd(Prices$date)
par(mfrow = c(2, 1))
Prices.ts.Tesla <- zoo(Prices$TSLA,order.by=date.ts)
plot(Prices.ts.Tesla, type = "l",main = "Prices", ylab = "Tesla",col = "red")
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
abline(v = ymd(20221027), lwd = 1, col = "blue") #Elon Musk bought Twitter
legend("topleft",
legend = c("Start of Covid Lockdown", "Russia-Ukraine Conflict","CEO Twitter Acquisition"),
col = c("purple", "black", "blue"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
Prices.ts.Unilever <- zoo(Prices$UL,order.by=date.ts)
plot(Prices.ts.Unilever, type = "l", ylab = "Unilever", col = "red")
abline(v = ymd(20160623), lwd = 1, col = "green") #Brexit Referendum
abline(v = ymd(20170217), lwd = 1, col = "darkred") #Merger speculation
abline(v = ymd(20190101), lwd = 1, col = "blue") #CEO change
abline(v = ymd(20200315), lwd = 1, col = "purple") # Start of Covid Lockdown
abline(v = ymd(20220224), lwd = 1, col = "black") #Start of Russia - Ukraine Conflict
legend("topleft",
legend = c("Brexit Referendum","Merger speculation","CEO change","Start of Covid Lockdown", "Russia-Ukraine Conflict"),
col = c("green","darkred","blue","purple", "black"),
lwd = 2,
cex = 0.6,
bty = "n")  # 'bty = "n"' removes the box around the legend
#Subset for simple returns
Simple_Returns <- dcast(stocks, date ~ PERMNO, value.var = "RET")
names(Simple_Returns) <- Tickers
#Subset for simple returns
Simple_Returns <- dcast(stocks, date ~ PERMNO, value.var = "RET")
names(Simple_Returns) <- Tickers
names(Simple_Returns)[1] <- "date"
#Converting to compound returns
Returns <- log(1 + Simple_Returns[,2:dim(Simple_Returns)[2]])
Returns$date <- Simple_Returns$date
Returns <- Returns[,c(dim(Simple_Returns)[2],1:dim(Simple_Returns)[2] - 1)]
#Plotting returns
date.ts <- ymd(Returns$date)
par(mfrow = c(2, 1))
Returns.ts <- zoo(Returns$TSLA,order.by=date.ts)
plot(Returns.ts, type = "l",main = "Returns", ylab = "Tesla",col = "blue")
Returns.ts <- zoo(Returns$UL,order.by=date.ts)
plot(Returns.ts, type = "l", ylab = "Unilever", col = "blue")
#Analysing Tesla's returns
t <- Returns$TSLA
dist_test <- qqPlot(t, distribution = "norm", envelope = FALSE, ylab ="Tesla Returns", main ="Normal")
dist_test <- qqPlot(t, distribution = "t", df = 4, envelope = FALSE,  ylab ="Tesla Returns",main ="t(4)")
dist_test <- qqPlot(t, distribution = "t", df = 3, envelope = FALSE, ylab ="Tesla Returns",main ="t(3)")
dist_test <- qqPlot(t, distribution = "t", df = 3.5, envelope = FALSE, ylab ="Tesla Returns",main ="t(3.5)")
mean(t)
sd(t)
skewness(t)
kurtosis(t)
jarque.bera.test(t)
acf(t, main = "Autocorrelation of returns")
Box.test(t, type = "Ljung-Box")
acf(t, main = "Autocorrelation of returns")
par(mfrow = c(1, 1))
mean(u)
mean(u)
sd(u)
skewness(u)
kurtosis(u)
jarque.bera.test(u)
par(mfrow = c(1, 1))
acf(u, main = "Autocorrelation of returns")
Box.test(u, type = "Ljung-Box")
acf(u^2, main = "Autocorrelation of returns")
Box.test(u^2, type = "Ljung-Box")
acf(u, main = "Autocorrelation of returns")
Box.test(u, type = "Ljung-Box")
acf(u^2, main = "Autocorrelation of returns")
Box.test(u^2, type = "Ljung-Box")
mean(t)
sd(t)
skewness(t)
kurtosis(t)
jarque.bera.test(t)
acf(t, main = "Autocorrelation of returns")
Box.test(t, type = "Ljung-Box")
acf(t^2, main = "Autocorrelation of returns")
Box.test(t^2, type = "Ljung-Box")
#Analysing Unilever's returns
u <- Returns$UL
mean(t)
sd(t)
skewness(t)
kurtosis(t)
jarque.bera.test(t)
par(mfrow = c(1, 1))
acf(t, main = "Autocorrelation of returns")
Box.test(t, type = "Ljung-Box")
acf(t^2, main = "Autocorrelation of returns")
Box.test(t^2, type = "Ljung-Box")
acf(t, main = "Autocorrelation of returns")
Box.test(t, type = "Ljung-Box")
acf(t^2, main = "Autocorrelation of returns")
mean(t)
sd(t)
skewness(t)
kurtosis(t)
jarque.bera.test(t)
par(mfrow = c(1, 1))
acf(t, main = "df of returns")
Box.test(t, type = "Ljung-Box")
acf(t^2, main = "Autocorrelation of returns")
Box.test(t^2, type = "Ljung-Box")
